on: push
name: Tests suite

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Common tests setup
        uses: ./.github/actions/tests-common

      - name: Setup dependencies
        run: make docker-deps

      - name: Execute tests
        run: make docker-test

  test-coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    
    env:
      MIX_ENV: test
      NODEROOT: ./node/local
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: erlef/setup-beam@v1
        with:
          otp-version: 22.3.4.24
          elixir-version: 1.10.4

      - name: Setup node
        run: |
          curl -L https://github.com/aeternity/aeternity/releases/download/v6.4.0/aeternity-v6.4.0-ubuntu-x86_64.tar.gz -o aeternity.tgz \
          && mkdir -p ${NODEROOT}/rel/aeternity && tar xvf aeternity.tgz -C ${NODEROOT}/rel/aeternity && cp -rf ${NODEROOT}/rel/aeternity/lib/ ${NODEROOT}

      - name: Get dependencies
        run: mix deps.get

      - name: Execute coverage
        run: elixir --sname aeternity@localhost -S mix coveralls.github
          
  lint:
    name: Automated linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Common tests setup
        uses: ./.github/actions/tests-common

      - name: Setup dependencies
        run: make docker-deps

      - name: Reset master
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          git branch -f master origin/master

      - run: make docker-lint

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v1
        with:
          path: deps
          key: dependencies-${{ hashFiles('mix.lock') }}

      - uses: actions/cache@v1
        with:
          path: _build
          key: build-${{ hashFiles('mix.lock') }}

      - uses: actions/cache@v1
        id: plt-cache
        with:
          path: priv/plts
          key: plts-v6-${{ hashFiles('mix.lock') }}

      - name: Common tests setup
        uses: ./.github/actions/tests-common

      - name: Setup dependencies
        run: make docker-deps

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          make docker-dialyzer-plt

      - run: make docker-dialyzer
