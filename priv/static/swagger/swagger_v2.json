{
  "openapi": "3.0.0",
  "info": {
    "description": "API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)",
    "title": "Aeternity Middleware",
    "version": "1.68.2"
  },
  "servers": [
    {
      "url": "/mdw/v2",
      "description": "V2 version path"
    }
  ],
  "components": {
    "parameters": {
      "LimitParam": {
        "in": "query",
        "name": "limit",
        "description": "Limit paginated resources (max 100)",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "ScopeParam": {
        "in": "query",
        "name": "scope",
        "description": "Scopes results in a txi or generation range",
        "schema": {
          "type": "string",
          "pattern": "^(txi|gen):\\d+(-\\d+)?$"
        }
      },
      "DirectionParam": {
        "in": "query",
        "name": "direction",
        "description": "Sorts results in forwards or backwards direction",
        "schema": {
          "type": "string",
          "enum": [
            "forward",
            "backward"
          ]
        }
      }
    },
    "schemas": {
      "ErrorResponse": {
        "description": "Error response from the API",
        "type": "object",
        "example": {
          "error": "invalid id: th_2Twp3pJeVuwQ7cMSdPQRfpAUWwdMiwx6coVMpRaNSuzFRnDZF"
        },
        "properties": {
          "error": {
            "description": "The message of the error raised",
            "type": "string"
          }
        },
        "required": [
          "error"
        ],
        "title": "Error response"
      },
      "NotFoundResponse": {
        "description": "Resource not found on the API",
        "type": "object",
        "example": {
          "error": "not found: th_2Twp3pJeVuwQ7cMSdPQRfpAUWwdMiwx6coVMpRaNSuzFRnDZF"
        },
        "properties": {
          "error": {
            "description": "The message of the error raised",
            "type": "string"
          }
        },
        "required": [
          "error"
        ],
        "title": "Not found response"
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "example": "/blocks?cursor=123",
            "nullable": true
          },
          "prev": {
            "type": "string",
            "example": "/blocks?cursor=234",
            "nullable": true
          }
        },
        "required": [
          "next",
          "prev"
        ]
      },
      "Aex9TransferEvent": {
        "description": "AEx9 Transfer",
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "example": 9975080
          },
          "block_height": {
            "type": "integer",
            "example": 534443
          },
          "contract_id": {
            "type": "string",
            "example": "ct_2t7TnocFw7oCYSS7g2yGutZMpGEJta6dq2DTX38SmuqmwtN6Ch"
          },
          "log_idx": {
            "type": "integer",
            "example": 0
          },
          "micro_index": {
            "type": "integer",
            "example": 4
          },
          "micro_time": {
            "type": "integer",
            "example": 1640350612991
          },
          "recipient_id": {
            "type": "string",
            "example": "ak_kFZkYQMsU47oQsTxEimTybAWUozSVmCXJBNZwetEr87hG3M1z"
          },
          "sender_id": {
            "type": "string",
            "example": "ak_psy8tRXPzGxh6975H7K6XQcMFVsdrxJMt7YkzMY8oUTevutzw"
          },
          "tx_hash": {
            "type": "string",
            "example": "th_2Zfo2ALfRkKQxEaUj3HhcUGyMrTqYpDMgr2u15fPanYD1d55kz"
          }
        }
      },
      "Aex141TransferEvent": {
        "description": "AEx141 Transfer",
        "type": "object",
        "properties": {
          "block_height": {
            "type": "string",
            "example": 653289
          },
          "contract_id": {
            "type": "string",
            "example": "ct_2MFbjHcaFJXqLH9WrSZcX6EjbWKPhos1fv8nqXfPLoHMV1qVZz"
          },
          "log_idx": {
            "type": "integer",
            "example": 0
          },
          "micro_index": {
            "type": "integer",
            "example": 125
          },
          "micro_time": {
            "type": "integer",
            "example": 1662654259282
          },
          "recipient_id": {
            "type": "string",
            "example": "ak_uTWegpfN6UjA4yz8X4ZVRi9xKEYeXHJDRZcRryTsRHAFoBpLa"
          },
          "sender_id": {
            "type": "string",
            "example": "ak_11111111111111111111111111111111273Yts"
          },
          "token_id": {
            "type": "integer",
            "example": 1
          },
          "tx_hash": {
            "type": "string",
            "example": "th_2FciwUNyT7WRGee35KnNMhuoLFSCyiquVLFP3kATjwrFJh4Cfh"
          }
        }
      },
      "NameClaimEvent": {
        "description": "Name claim",
        "type": "object",
        "properties": {
          "tx_hash": {
            "description": "The hash of the transaction (either a name claim or a contract call transaction)",
            "type": "string"
          },
          "tx": {
            "description": "The claim transaction (internal or not)",
            "type": "object"
          }
        },
        "required": [
          "tx_hash",
          "tx"
        ]
      },
      "InternalContractCallEvent": {
        "description": "Contract call made inside of a contract call or contract create transaction",
        "type": "object",
        "properties": {
          "contract_tx_hash": {
            "description": "The contract creation transaction hash",
            "type": "string"
          },
          "contract_id": {
            "description": "The contract pubkey",
            "type": "string"
          },
          "call_tx_hash": {
            "description": "The contract call transaction hash",
            "type": "string"
          },
          "function": {
            "description": "The name of the function",
            "type": "string"
          },
          "internal_tx": {
            "description": "The transaction object",
            "type": "object"
          },
          "height": {
            "description": "The height in which the internal call happened",
            "type": "integer"
          },
          "micro_index": {
            "description": "The micro block index",
            "type": "integer"
          },
          "block_hash": {
            "description": "The micro block hash in which the transaction happened",
            "type": "string"
          }
        },
        "required": [
          "contract_tx_hash",
          "contract_id",
          "function",
          "internal_tx",
          "height",
          "micro_index",
          "block_hash"
        ]
      },
      "InternalTransferEvent": {
        "description": "Internal transfer",
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount of AE tokens",
            "type": "integer"
          },
          "kind": {
            "description": "The kind of internal transfer",
            "type": "string",
            "enum": [
              "accounts_extra_lima",
              "accounts_fortuna",
              "accounts_genesis",
              "accounts_lima",
              "accounts_minerva",
              "contracts_lima",
              "reward_dev",
              "reward_block",
              "fee_refund_oracle",
              "fee_lock_name",
              "fee_refund_name",
              "fee_spend_name",
              "reward_oracle"
            ]
          },
          "ref_tx_hash": {
            "description": "The transaction hash of a transaction related to the internal transfer",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "kind",
          "ref_tx_hash"
        ]
      },
      "Activity": {
        "description": "Activity related to an account",
        "type": "object",
        "properties": {
          "block_hash": {
            "description": "The block hash",
            "type": "string",
            "example": "mh_2voSWMaC6hmhyCc8qZ7AxmenrK2CkqKeUg4bkFA8gcRTd4RwVB"
          },
          "block_time": {
            "description": "The time in which the block happened",
            "type": "integer",
            "example": 1587577771376
          },
          "height": {
            "description": "The block height",
            "type": "integer"
          },
          "type": {
            "description": "The event type",
            "type": "string",
            "enum": [
              "SpendTxEvent",
              "OracleRegisterTxEvent",
              "OracleExtendTxEvent",
              "OracleQueryTxEvent",
              "OracleResponseTxEvent",
              "NamePreclaimTxEvent",
              "NameClaimTxEvent",
              "NameTransferTxEvent",
              "NameUpdateTxEvent",
              "NameRevokeTxEvent",
              "ContractCreateTxEvent",
              "ContractCallTxEvent",
              "GaAttachTxEvent",
              "GaMetaTxEvent",
              "ChannelCreateTxEvent",
              "ChannelDepositTxEvent",
              "ChannelWithdrawTxEvent",
              "ChannelForceProgressTxEvent",
              "ChannelCloseMutualTxEvent",
              "ChannelCloseSoloTxEvent",
              "ChannelSlashTxEvent",
              "ChannelSettleTxEvent",
              "ChannelSnapshotSoloTxEvent",
              "ChannelSetDelegatesTxEvent",
              "ChannelOffchainTxEvent",
              "ChannelClientReconnectTxEvent",
              "PayingForTxEvent"
            ]
          },
          "payload": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Tx"
              },
              {
                "$ref": "#/components/schemas/Aex9TransferEvent"
              },
              {
                "$ref": "#/components/schemas/Aex141TransferEvent"
              },
              {
                "$ref": "#/components/schemas/InternalContractCallEvent"
              },
              {
                "$ref": "#/components/schemas/InternalTransferEvent"
              }
            ]
          }
        },
        "required": [
          "block_hash",
          "height",
          "type",
          "payload"
        ]
      },
      "Block": {
        "example": {
          "beneficiary": "ak_2MR38Zf355m6JtP13T3WEcUcSLVLCxjGvjk6zG95S2mfKohcSS",
          "hash": "kh_uoTGwc4HPzEW9qmiQR1zmVVdHmzU6YmnVvdFe6HvybJJRj7V6",
          "height": 123008,
          "info": "cb_AAAAAfy4hFE=",
          "miner": "ak_Fqnmm5hRAMaVPWk8wzpodMopZgWghMns4mM7kSV1jgT89p9AV",
          "nonce": 9223756548132686000,
          "pow": [
            12359907,
            21243613,
            31370838,
            34911479,
            39070315,
            39375528,
            45751339,
            49864206,
            56785423,
            70282271,
            89781776,
            136985196,
            140580763,
            142415353,
            145306210,
            148449813,
            156037609,
            161568067,
            170308922,
            185345129,
            192805579,
            214115188,
            220339679,
            243288723,
            258891016,
            283001743,
            284306909,
            286457285,
            326405486,
            352963232,
            377904500,
            378120539,
            380987399,
            388675008,
            447958786,
            457602498,
            465751225,
            466823982,
            475416389,
            491255227,
            530197445,
            533633643
          ],
          "ev_hash": "kh_hwin2p8u87mqiK836FixGa1pL9eBkL1Ju37Yi6EUebCgAf8rm",
          "prev_key_hash": "kh_hwin2p8u87mqiK836FixGa1pL9eBkL1Ju37Yi6EUebCgAf8rm",
          "state_hash": "bs_9Dg6mTmiJLpbg9dzgjnNFVidQesvZYZG3dEviUCd4oE1hUcna",
          "target": 504082055,
          "time": 1565548832164,
          "version": 3
        },
        "properties": {
          "beneficiary": {
            "description": "The beneficiary",
            "type": "string"
          },
          "hash": {
            "description": "The block hash",
            "type": "string"
          },
          "height": {
            "description": "The block height",
            "type": "integer"
          },
          "info": {
            "description": "The info",
            "type": "string"
          },
          "miner": {
            "description": "The miner public key",
            "type": "string"
          },
          "nonce": {
            "description": "The nonce",
            "type": "string"
          },
          "pow": {
            "description": "The pow",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "prev_hash": {
            "description": "The previous block hash",
            "type": "string"
          },
          "prev_key_hash": {
            "description": "The previous key block hash",
            "type": "string"
          },
          "state_hash": {
            "description": "The state hash",
            "type": "string"
          },
          "target": {
            "description": "The target",
            "type": "integer"
          },
          "time": {
            "description": "The time",
            "type": "integer"
          },
          "version": {
            "description": "The version",
            "type": "integer"
          }
        },
        "title": "Key Block",
        "type": "object"
      },
      "KeyBlock": {
        "example": {
          "beneficiary": "ak_2MR38Zf355m6JtP13T3WEcUcSLVLCxjGvjk6zG95S2mfKohcSS",
          "hash": "kh_uoTGwc4HPzEW9qmiQR1zmVVdHmzU6YmnVvdFe6HvybJJRj7V6",
          "height": 123008,
          "info": "cb_AAAAAfy4hFE=",
          "miner": "ak_Fqnmm5hRAMaVPWk8wzpodMopZgWghMns4mM7kSV1jgT89p9AV",
          "nonce": 9223756548132686000,
          "pow": [
            12359907,
            21243613,
            31370838,
            34911479,
            39070315,
            39375528,
            45751339,
            49864206,
            56785423,
            70282271,
            89781776,
            136985196,
            140580763,
            142415353,
            145306210,
            148449813,
            156037609,
            161568067,
            170308922,
            185345129,
            192805579,
            214115188,
            220339679,
            243288723,
            258891016,
            283001743,
            284306909,
            286457285,
            326405486,
            352963232,
            377904500,
            378120539,
            380987399,
            388675008,
            447958786,
            457602498,
            465751225,
            466823982,
            475416389,
            491255227,
            530197445,
            533633643
          ],
          "ev_hash": "kh_hwin2p8u87mqiK836FixGa1pL9eBkL1Ju37Yi6EUebCgAf8rm",
          "prev_key_hash": "kh_hwin2p8u87mqiK836FixGa1pL9eBkL1Ju37Yi6EUebCgAf8rm",
          "state_hash": "bs_9Dg6mTmiJLpbg9dzgjnNFVidQesvZYZG3dEviUCd4oE1hUcna",
          "target": 504082055,
          "time": 1565548832164,
          "version": 3
        },
        "properties": {
          "beneficiary": {
            "description": "The beneficiary",
            "type": "string"
          },
          "hash": {
            "description": "The block hash",
            "type": "string"
          },
          "height": {
            "description": "The block height",
            "type": "integer"
          },
          "info": {
            "description": "The info",
            "type": "string"
          },
          "miner": {
            "description": "The miner public key",
            "type": "string"
          },
          "nonce": {
            "description": "The nonce",
            "type": "string"
          },
          "pow": {
            "description": "The pow",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "prev_hash": {
            "description": "The previous block hash",
            "type": "string"
          },
          "prev_key_hash": {
            "description": "The previous key block hash",
            "type": "string"
          },
          "state_hash": {
            "description": "The state hash",
            "type": "string"
          },
          "target": {
            "description": "The target",
            "type": "integer"
          },
          "time": {
            "description": "The time",
            "type": "integer"
          },
          "version": {
            "description": "The version",
            "type": "integer"
          }
        },
        "title": "Key Block",
        "type": "object"
      },
      "MicroBlock": {
        "example": {
          "micro_block_index": 64,
          "transactions_count": 1,
          "hash": "mh_JryFr55GwbEbEJivkvHwBPzqbhu6AvpcZqCiBoXzgZdLmNn2K",
          "height": 685072,
          "pof_hash": "no_fraud",
          "prev_hash": "mh_hH3qADCrnGvuup6JwjtNSacHLd9h3NJzAgr173jS9KUqijfTB",
          "prev_key_hash": "kh_2rTj3FTZJ6fnuLFDJwAiDQZat2a23Lkp5uZQooxjwXEFhH4Vtw",
          "signature": "sg_8hhU15cVMbukFj4FbdrFwwYnbzXYPnstu9PDnWZGbfQNpeHcB6tK1F3wvG1MPYySARgDRJYUh3YPJD3HctFwg6Y4rUGSR",
          "state_hash": "bs_2bNSxvfhsPeAwN3LJU1oZLtUJ6GbeRdJYTEnFLAAazWtwPPqpN",
          "time": 1668435898477,
          "txs_hash": "bx_2TAosDwRW2CwxbNiucN8hRfUHQcnJn2u3quDLPE9jAmgX26Qya",
          "version": 5
        },
        "properties": {
          "micro_block_index": {
            "description": "The index of the micro-block on the micro-block height, starting from 0",
            "type": "integer"
          },
          "transactions_count": {
            "description": "The number of transactions",
            "type": "integer"
          },
          "hash": {
            "description": "The micro block hash",
            "type": "string"
          },
          "height": {
            "description": "The block height",
            "type": "integer"
          },
          "pof_hash": {
            "description": "The pow",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "prev_hash": {
            "description": "The previous block hash",
            "type": "string"
          },
          "prev_key_hash": {
            "description": "The previous key block hash",
            "type": "string"
          },
          "state_hash": {
            "description": "The state hash",
            "type": "string"
          },
          "time": {
            "description": "The time",
            "type": "integer"
          },
          "version": {
            "description": "The version",
            "type": "integer"
          }
        },
        "title": "MicroBlock",
        "type": "object"
      },
      "Name": {
        "description": "Name",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "hash": {
            "type": "string",
            "example": "nm_2YmgvoUhVua9wEYGpMj9ybctbQXHPbY9Ppu4CoKoUm8jjFfcsc"
          },
          "info": {
            "type": "object",
            "properties": {
              "active_from": {
                "type": "integer",
                "example": 163282
              },
              "activation_time": {
                "type": "integer",
                "example": 1587577771376
              },
              "claims": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [
                  4793600,
                  4792073,
                  4780558,
                  4750560
                ]
              },
              "expire_height": {
                "type": "integer",
                "example": 362026
              },
              "ownership": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "string",
                    "example": "ak_25BWMx4An9mmQJNPSwJisiENek3bAGadze31Eetj4K4JJC8VQN"
                  },
                  "original": {
                    "type": "string",
                    "example": "ak_pMwUuWtqDoPxVtyAmWT45JvbCF2pGTmbCMB4U5yQHi37XF9is"
                  }
                }
              },
              "pointers": {
                "type": "object",
                "properties": {
                  "account_pubkey": {
                    "type": "string",
                    "example": "ak_25BWMx4An9mmQJNPSwJisiENek3bAGadze31Eetj4K4JJC8VQN"
                  }
                }
              },
              "transfers": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [
                  11861568,
                  11860267
                ]
              },
              "updates": {
                "type": "string",
                "items": {
                  "type": "integer"
                },
                "example": [
                  15509041,
                  15472510,
                  15436683,
                  15399850,
                  15363107,
                  15327260,
                  15292125,
                  15255201,
                  15218294,
                  15182623,
                  15145666,
                  15106041,
                  15103138,
                  15102422,
                  15034493,
                  14998378,
                  14962285,
                  14926110,
                  14889735,
                  14853605,
                  14816113,
                  14780302,
                  14734948,
                  14697934,
                  14660004,
                  14622742,
                  14585275,
                  14549202,
                  14512586,
                  14475599,
                  14433402,
                  14395593,
                  14359214,
                  14322121,
                  14275361,
                  14237928,
                  14197055,
                  14158176,
                  14118957,
                  14083790,
                  14047637,
                  14007331,
                  13968434,
                  13929634,
                  13888411,
                  13852034,
                  13729934,
                  13692516,
                  13655299,
                  13621141,
                  13585850,
                  13549286,
                  13517014,
                  13478966,
                  13119079,
                  13119035,
                  13119002,
                  13118969,
                  13118936,
                  12758156,
                  12758112,
                  12432743,
                  12432718,
                  12432693,
                  12432668,
                  12432643,
                  12077832,
                  10477629,
                  7255087,
                  4831909
                ]
              }
            },
            "example": "trustwallet.chain"
          },
          "previous": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "name",
              "auction"
            ],
            "example": "name"
          }
        }
      },
      "Auction": {
        "description": "Auction",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": false
          },
          "info": {
            "type": "object",
            "properties": {
              "auction_end": {
                "type": "integer",
                "example": 638002
              },
              "bids": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [
                  32508400
                ]
              },
              "last_bid": {
                "type": "object",
                "properties": {
                  "block_hash": {
                    "type": "string",
                    "example": "mh_28pH6wARaeMcdvMfe7nMJV2yYQMP9E36mmk6g9r9kkpEgao9MQ"
                  },
                  "block_height": {
                    "type": "integer",
                    "example": 608242
                  },
                  "hash": {
                    "type": "string",
                    "example": "th_2FAG7SHx4FkEBwh5dxjd2As3d7xXPZ3AZTQKFxm2sKADYpvDf6"
                  },
                  "micro_index": {
                    "type": "integer",
                    "example": 2
                  },
                  "micro_time": {
                    "type": "integer",
                    "example": 1654251750088
                  },
                  "signatures": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "sg_VXb4ipxdLk5PxfoQ6xUv9ma3GGmmMSARsRbXeWdS8cAGZS5SVdkfJgLskSw7rXzZSikGwha23LzsK7LPrDomkohRZTcb8"
                    }
                  },
                  "tx": {
                    "type": "object",
                    "example": {
                      "account_id": "ak_2JJNMYcnqPaABiSY5omockmv4cCoZefv4XzStAxKe9gM2xYz2r",
                      "fee": 16540000000000,
                      "name": "1996.chain",
                      "name_fee": 134626900000000000000,
                      "name_id": "nm_aJcPv1zMt3gdvxk6CQocaHq48D5vUyZXTqmwv2yXTTmk8fm2c",
                      "name_salt": 7095609104934055,
                      "nonce": "225,",
                      "ttl": 818002,
                      "type": "NameClaimTx",
                      "version": 2
                    }
                  }
                }
              },
              "tx_index": {
                "type": "integer",
                "example": 32508400
              },
              "name": {
                "type": "string",
                "example": "1996.chain"
              },
              "previous": {
                "$ref": "#/components/schemas/Auction"
              },
              "status": {
                "type": "string",
                "enum": [
                  "auction"
                ]
              }
            }
          }
        }
      },
      "NameClaim": {
        "description": "Name Claim",
        "type": "object",
        "properties": {
          "block_hash": {
            "type": "string",
            "example": "mh_2Nr1oj3Z3D9sYnEDrNk4SXjboT3otCXQafsNukRcRDg25URKrR"
          },
          "height": {
            "type": "integer",
            "example": 45784
          },
          "tx": {
            "type": "object",
            "example": {
              "account_id": "ak_2JJNMYcnqPaABiSY5omockmv4cCoZefv4XzStAxKe9gM2xYz2r",
              "fee": 16540000000000,
              "name": "1996.chain",
              "name_fee": 134626900000000000000,
              "name_id": "nm_aJcPv1zMt3gdvxk6CQocaHq48D5vUyZXTqmwv2yXTTmk8fm2c",
              "name_salt": 7095609104934055,
              "nonce": 225,
              "ttl": 818002,
              "type": "NameClaimTx",
              "version": 2
            }
          }
        }
      },
      "NameTransfer": {
        "description": "Name Transfer",
        "type": "object",
        "properties": {
          "block_hash": {
            "type": "string",
            "example": "mh_2Nr1oj3Z3D9sYnEDrNk4SXjboT3otCXQafsNukRcRDg25URKrR"
          },
          "height": {
            "type": "integer",
            "example": 45784
          },
          "tx": {
            "type": "object",
            "example": {
              "account_id": "ak_24jcHLTZQfsou7NvomRJ1hKEnjyNqbYSq2Az7DmyrAyUHPq8uR",
              "fee": 30000,
              "name_id": "nm_en1mSKcVPb9gY8UGxPfABw3JouEGZ4ZvdfcBWetmn6czUuVG1",
              "nonce": 18550,
              "recipient_id": "ak_2WZoa13VKHCamt2zL9Wid8ovmyvTEUzqBjDNGDNwuqwUQJZG4t",
              "ttl": 42420,
              "type": "NameTransferTx",
              "version": 1
            }
          }
        }
      },
      "NameUpdate": {
        "description": "Name Update",
        "type": "object",
        "properties": {
          "block_hash": {
            "type": "string",
            "example": "mh_2Nr1oj3Z3D9sYnEDrNk4SXjboT3otCXQafsNukRcRDg25URKrR"
          },
          "height": {
            "type": "integer",
            "example": 45784
          },
          "tx": {
            "type": "object",
            "example": {
              "account_id": "ak_2CXSVZqVaGuZsmcRs3CN6wb2b9GKtf7Arwej7ahbeAQ1S8qkmM",
              "client_ttl": 36000,
              "fee": 20000000000000,
              "name_id": "nm_2tokSd7X5zeYzAr5icomaVLBYC3TGeCypsPjZALcQcxYZb4YdP",
              "name_ttl": 50000,
              "nonce": 3544,
              "pointers": [
                {
                  "id": "ak_M6MNwGLtMQ4j3m8pzQz9uF38nMfjCCVaiQ8fvTAU6DEsCocD5",
                  "key": "account_pubkey"
                }
              ],
              "ttl": 60000,
              "type": "NameUpdateTx",
              "version": 1
            }
          }
        }
      },
      "Tx": {
        "description": "Transaction",
        "type": "object",
        "properties": {
          "block_hash": {
            "description": "The block hash",
            "type": "string"
          },
          "block_height": {
            "description": "The block height",
            "type": "integer"
          },
          "hash": {
            "description": "The transaction hash",
            "type": "string"
          },
          "micro_index": {
            "description": "The micro block index",
            "type": "integer"
          },
          "micro_time": {
            "description": "The unix timestamp",
            "type": "integer"
          },
          "signatures": {
            "description": "The signatures",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tx": {
            "description": "The transaction",
            "type": "object"
          },
          "tx_index": {
            "description": "The transaction index",
            "type": "integer"
          }
        },
        "example": {
          "block_hash": "mh_ufiYLdN8am8fBxMnb6xq2K4MQKo4eFSCF5bgixq4EzKMtDUXP",
          "block_height": 1,
          "hash": "th_2FHxDzpQMRTiRfpYRV3eCcsheHr1sjf9waxk7z6JDTVcgqZRXR",
          "micro_index": 0,
          "micro_time": 1543375246712,
          "signatures": [
            "sg_Fipyxq5f3JS9CB3AQVCw1v9skqNBw1cdfe5W3h1t2MkviU19GQckERQZkqkaXWKowdTUvr7B1QbtWdHjJHQcZApwVDdP9"
          ],
          "tx": {
            "amount": 150425,
            "fee": 101014,
            "nonce": 1,
            "payload": "ba_NzkwOTIxLTgwMTAxOGSbElc=",
            "recipient_id": "ak_26dopN3U2zgfJG4Ao4J4ZvLTf5mqr7WAgLAq6WxjxuSapZhQg5",
            "sender_id": "ak_26dopN3U2zgfJG4Ao4J4ZvLTf5mqr7WAgLAq6WxjxuSapZhQg5",
            "type": "SpendTx",
            "version": 1
          },
          "tx_index": 0
        }
      },
      "DeltaStat": {
        "description": "DeltaStat",
        "type": "object",
        "properties": {
          "height": {
            "description": "The generation",
            "type": "integer"
          },
          "auctions_started": {
            "description": "The number of auctions started",
            "type": "integer"
          },
          "block_reward": {
            "description": "The block reward",
            "type": "integer"
          },
          "contracts_created": {
            "description": "The number of contracts created",
            "type": "integer"
          },
          "dev_reward": {
            "description": "The dev reward",
            "type": "integer"
          },
          "names_activated": {
            "description": "The number of names activated",
            "type": "integer"
          },
          "names_expired": {
            "description": "The number of names expired",
            "type": "integer"
          },
          "names_revoked": {
            "description": "The number of names revoked",
            "type": "integer"
          },
          "oracles_expired": {
            "description": "The number of oracles expired",
            "type": "integer"
          },
          "oracles_registered": {
            "description": "The number of oracles registered",
            "type": "integer"
          },
          "last_tx_hash": {
            "description": "The last transaction hash for this height",
            "type": "string"
          }
        },
        "example": {
          "auctions_started": 0,
          "block_reward": 269973000000000000000,
          "contracts_created": 0,
          "dev_reward": 33027000000000000000,
          "height": 121804,
          "names_activated": 0,
          "names_expired": 0,
          "names_revoked": 0,
          "oracles_expired": 0,
          "oracles_registered": 0,
          "last_tx_hash": "th_2FHxDzpQMRTiRfpYRV3eCcsheHr1sjf9waxk7z6JDTVcgqZRXR"
        }
      },
      "TotalStat": {
        "type": "object",
        "description": "TotalStat",
        "properties": {
          "height": {
            "description": "The generation",
            "type": "integer"
          },
          "auctions_started": {
            "description": "The number of auctions started",
            "type": "integer"
          },
          "block_reward": {
            "description": "The block reward",
            "type": "integer"
          },
          "contracts_created": {
            "description": "The number of contracts created",
            "type": "integer"
          },
          "dev_reward": {
            "description": "The dev reward",
            "type": "integer"
          },
          "names_activated": {
            "description": "The number of names activated",
            "type": "integer"
          },
          "names_expired": {
            "description": "The number of names expired",
            "type": "integer"
          },
          "names_revoked": {
            "description": "The number of names revoked",
            "type": "integer"
          },
          "oracles_expired": {
            "description": "The number of oracles expired",
            "type": "integer"
          },
          "oracles_registered": {
            "description": "The number of oracles registered",
            "type": "integer"
          },
          "last_tx_hash": {
            "description": "The last transaction hash for this height",
            "type": "string"
          }
        },
        "example": {
          "auctions_started": 0,
          "block_reward": 269973000000000000000,
          "contracts_created": 0,
          "dev_reward": 33027000000000000000,
          "height": 121804,
          "names_activated": 0,
          "names_expired": 0,
          "names_revoked": 0,
          "oracles_expired": 0,
          "oracles_registered": 0,
          "last_tx_hash": "th_2FHxDzpQMRTiRfpYRV3eCcsheHr1sjf9waxk7z6JDTVcgqZRXR"
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Balance currently left in the channel",
            "example": 20000000000001
          },
          "channel": {
            "type": "string",
            "description": "Channel pubkey",
            "example": "ch_22SfHdnhUQBAHpC5euxHG9qjRWGfHsj47sZqSmXk4cTfJp4aUd"
          },
          "channel_reserve": {
            "type": "integer",
            "description": "Minimum amount for sufficient funds",
            "example": 500000000000000000
          },
          "delegate_ids": {
            "type": "object",
            "description": "Pubkeys of delegated accounts",
            "example": {
              "initiator": [],
              "responder": []
            }
          },
          "initiator": {
            "type": "string",
            "description": "Channel initiator pubkey",
            "example": "ak_2BUfk9dHtn2YKuBe6uY9f4qD94xKETA6w9MGAYyJc5weiUUXhy"
          },
          "initiator_amount": {
            "type": "integer",
            "description": "Amount owned by initiator",
            "example": 4500000000000000000
          },
          "last_updated_height": {
            "type": "string",
            "description": "The last height in which the channel was updated on chain",
            "example": 141956
          },
          "last_updated_tx_type": {
            "type": "string",
            "description": "The transaction type of the last transaction that updated the channel",
            "example": "ChannelDepositTx"
          },
          "last_updated_time": {
            "type": "integer",
            "description": "The block time in which the channel was last updated",
            "example": 1587577771376
          },
          "lock_period": {
            "description": "Amount of heights locked after a solo closing",
            "example": 10,
            "type": "integer"
          },
          "locked_until": {
            "description": "Non-inclusive height until which the channel is locked",
            "example": 712001,
            "type": "integer"
          },
          "responder": {
            "type": "string",
            "description": "The channel responder pubkey",
            "example": "ak_2dxvgsogiBDWXvZSzTghv5MoXLfkFGiEynDC5Cn8k2M2s325Ki"
          },
          "responder_amount": {
            "type": "integer",
            "description": "Amount owned by responder",
            "example": 4500000000000000000
          },
          "round": {
            "type": "integer",
            "description": "Round after last transaction",
            "example": 1
          },
          "solo_round": {
            "type": "integer",
            "description": "Round of last solo transaction",
            "example": 0
          },
          "state_hash": {
            "type": "string",
            "description": "The hash of the current channel state",
            "example": "st_Wwxms0IVM7PPCHpeOXWeeZZm8h5p/SuqZL7IHIbr3CqtlCL+"
          },
          "updates_count": {
            "type": "string",
            "description": "The amount of times the channel's been updated by any of the channel transactions",
            "example": 2
          }
        }
      },
      "Contract": {
        "description": "Contract creation info",
        "type": "object",
        "properties": {
          "aexn_type": {
            "type": "string",
            "example": "aex9"
          },
          "block_hash": {
            "type": "string",
            "example": "mh_mZ15v6q3eF8mUBVQ6shmWz6AXGvufMDTfcG9DXYY9uADuenHg"
          },
          "source_tx_hash": {
            "type": "string",
            "example": "th_hRMgnKsDZonTx9FStnAtdimPJxuZrFdZdZoYagzTfisLZALqG"
          },
          "source_tx_type": {
            "type": "string",
            "example": "ContractCreateTx"
          },
          "create_tx": {
            "type": "object",
            "example": {
              "amount": 25123,
              "owner_id": "ak_7wqP18AHzyoqymwGaqQp8G2UpzBCggYiq7CZdJiB71VUsLpR4"
            }
          }
        }
      },
      "ContractCall": {
        "description": "ContractCall",
        "type": "object",
        "properties": {
          "block_hash": {
            "type": "string",
            "example": "mh_mZ15v6q3eF8mUBVQ6shmWz6AXGvufMDTfcG9DXYY9uADuenHg"
          },
          "call_tx_hash": {
            "type": "string",
            "example": "th_hRMgnKsDZonTx9FStnAtdimPJxuZrFdZdZoYagzTfisLZALqG"
          },
          "call_txi": {
            "type": "integer",
            "example": 32508544
          },
          "contract_id": {
            "type": "string",
            "example": "ct_2AfnEfCSZCTEkxL5Yoi4Yfq6fF7YapHRaFKDJK3THMXMBspp5z"
          },
          "contract_txi": {
            "type": "integer",
            "example": 8392766
          },
          "function": {
            "type": "string",
            "example": "Oracle.query"
          },
          "height": {
            "type": "integer",
            "example": 608269
          },
          "internal_tx": {
            "type": "object",
            "example": {
              "fee": 0,
              "nonce": 0,
              "oracle_id": "ok_4HGhEdjeRtpsWzfSEJZnBKNmjgHALAifcBUey8EvRAdDfRsqc",
              "query": "YWtfdVRXZWdwZk42VWpBNHl6OFg0WlZSaTl4S0VZZVhISkRSWmNScnlUc1JIQUZvQnBMYTtodHRwczovL21haWwuZ29vZ2xlLmNvbS9tYWlsL3UvMC8jaW5ib3g=",
              "query_fee": 20000000000000,
              "query_id": "oq_2T4mYmjcyinbfYyHyDq6FfPXHChf5mYPEXgza9vHAukuq2EEHj",
              "query_ttl": {
                "type": "delta",
                "value": 20
              },
              "response_ttl": {
                "type": "delta",
                "value": 20
              },
              "sender_id": "ak_7wqP18AHzyoqymwGaqQp8G2UpzBCggYiq7CZdJiB71VUsLpR4",
              "type": "OracleQueryTx",
              "version": 1
            }
          },
          "local_idx": {
            "type": "integer",
            "example": 0
          },
          "micro_index": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "ContractLog": {
        "description": "ContractLog",
        "type": "object",
        "properties": {
          "args": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "example": [
              5.763217007799823e+76,
              7.045569028345458e+76,
              1050376320000000000
            ]
          },
          "block_hash": {
            "type": "string",
            "example": "mh_27wa1cRsbEGV5N9N6BVKEtX1ycaomL5Q9w1NpL2iRjRt4aZhiV"
          },
          "call_tx_hash": {
            "type": "string",
            "example": "th_DXhneXz8xk1RW2rSWtjzMFBsqkQ7qwhZzzYbdumq3hiZJHPig"
          },
          "call_txi": {
            "type": "integer",
            "example": 32530611
          },
          "contract_id": {
            "type": "string",
            "example": "ct_y7gojSY8rXW6tztE9Ftqe3kmNrqEXsREiPwGCeG3MJL38jkFo"
          },
          "contract_txi": {
            "type": "integer",
            "example": 23524907
          },
          "data": {
            "type": "string",
            "example": ""
          },
          "event_hash": {
            "type": "string",
            "example": "48U3JOKTVTI6FVMTK2BLHM8NG72JEBG93VS6MENPSC8E71IM5FNG===="
          },
          "ext_caller_contract_id": {
            "type": "string",
            "example": "ct_7UfopTwsRuLGFEcsScbYgQ6YnySXuyMxQWhw6fjycnzS5Nyzq"
          },
          "ext_caller_contract_txi": {
            "type": "integer",
            "example": 20366741
          },
          "height": {
            "type": "integer",
            "example": 609854
          },
          "log_idx": {
            "type": "integer",
            "example": 0
          },
          "micro_index": {
            "type": "integer",
            "example": 15
          },
          "parent_contract_id": {
            "type": "integer",
            "nullable": true,
            "example": null
          }
        }
      },
      "Oracle": {
        "example": {
          "active": false,
          "active_from": 4660,
          "expire_height": 6894,
          "extends": [
            11025
          ],
          "format": {
            "query": "string",
            "response": "string"
          },
          "oracle": "ok_R7cQfVN15F5ek1wBSYaMRjW2XbMRKx7VDQQmbtwxspjZQvmPM",
          "query_fee": 20000,
          "register": 11023,
          "register_time": 1587577771376
        },
        "properties": {
          "active": {
            "description": "The oracle active status",
            "type": "boolean"
          },
          "active_from": {
            "description": "The block height when the oracle became active",
            "type": "integer"
          },
          "expire_height": {
            "description": "The block height when the oracle expires",
            "type": "integer"
          },
          "register_time": {
            "description": "The block time in which the oracle was registered",
            "type": "integer"
          },
          "extends": {
            "description": "The tx indexes when the oracle has been extended",
            "type": "array",
            "items": {
              "type": "object",
              "description": "The oracle's query and response formats",
              "example": {
                "query": "string",
                "response": "string"
              },
              "properties": {
                "query": {
                  "description": "The query format",
                  "type": "string"
                },
                "response": {
                  "description": "The response format",
                  "type": "string"
                }
              },
              "required": [
                "response",
                "query"
              ]
            }
          },
          "oracle": {
            "description": "The oracle id",
            "type": "string"
          },
          "query_fee": {
            "description": "The query fee",
            "type": "integer"
          },
          "register": {
            "description": "The tx index when the oracle is registered",
            "type": "integer"
          }
        },
        "required": [
          "register",
          "query_fee",
          "oracle",
          "format",
          "extends",
          "expire_height",
          "active_from",
          "active"
        ],
        "type": "object"
      },
      "OracleQuery": {
        "example": {
          "block_hash": "mh_211yFeU3yxKgqXAaRyyxrALMDPxxTyYkrs6TwN9hWnxMHQk8Nc",
          "block_time": 1595571314482,
          "height": 289005,
          "query_id\"": "oq_su6wv4MZsnJfopjAhd1Sx7HuBBtqhdHhahkoTPWk7bg24UWNR",
          "response": {
            "block_hash": "mh_GWc3YBsoeCtsKW2FScDPAMz4jmK47Zdba4pPstJFJzREpWr9o",
            "block_time": 1595577843373,
            "height": 289044,
            "query_id": "oq_su6wv4MZsnJfopjAhd1Sx7HuBBtqhdHhahkoTPWk7bg24UWNR",
            "source_tx_hash": "th_GfXNatujAA2Uj73Cys39z9GzKXGHRiRFK1FCoKfDvhkJNWjpr",
            "source_tx_type": "OracleRespondTx",
            "fee": 16939000000000,
            "nonce": 2,
            "oracle_id": "ok_qJZPXvWPC7G9kFVEqNjj9NAmwMsQcpRu6E3SSCvCQuwfqpMtN",
            "response": "5oiQ5Yqf5LqGIQ",
            "response_ttl": {
              "type": "delta",
              "value": 100
            },
            "ttl": 289541
          },
          "source_tx_hash": "th_gsaRRLnysE4pFH1DqY731F6LBEjhdDwnzoDyBnZjBUygoSvpJ",
          "source_tx_type": "OracleQueryTx",
          "fee": 17199000000000,
          "nonce": 57,
          "oracle_id": "ok_qJZPXvWPC7G9kFVEqNjj9NAmwMsQcpRu6E3SSCvCQuwfqpMtN",
          "query": "YmFpeGluIHF1ZXJ5",
          "query_fee": 2000000000000000,
          "query_ttl": {
            "type": "delta",
            "value": 100
          },
          "response_ttl": {
            "type": "delta",
            "value": 100
          },
          "sender_id": "ak_CNcf2oywqbgmVg3FfKdbHQJfB959wrVwqfzSpdWVKZnep7nj4",
          "ttl": 289505
        },
        "properties": {
          "block_hash": {
            "description": "The hash of the block in which it ocurred",
            "type": "string"
          },
          "block_time": {
            "description": "The time of the block",
            "type": "integer"
          },
          "height": {
            "description": "The block height",
            "type": "integer"
          },
          "query_id": {
            "description": "The query ID",
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/OracleResponse"
          },
          "source_tx_hash": {
            "description": "The hash of the transaction in which the query was created",
            "type": "string"
          },
          "source_tx_type": {
            "description": "The type of the transaction in which the query was created, it can be either via a contract call or a query transaction",
            "type": "string"
          },
          "fee": {
            "description": "The transaction fee",
            "type": "integer"
          },
          "nonce": {
            "description": "The nonce",
            "type": "integer"
          },
          "oracle_id": {
            "description": "The oracle ID of this query",
            "type": "string"
          },
          "query": {
            "description": "Base64 encoding of the query",
            "type": "string"
          },
          "query_fee": {
            "description": "The query fee",
            "type": "integer"
          },
          "query_ttl": {
            "description": "Expiration of the query",
            "type": "object"
          },
          "response_ttl": {
            "description": "Expiration of the response",
            "type": "object"
          },
          "sender_id": {
            "description": "The creator of the query",
            "type": "string"
          },
          "ttl": {
            "description": "Transaction TTL",
            "type": "integer"
          }
        },
        "required": [
          "block_hash",
          "block_time",
          "height",
          "query_id",
          "source_tx_hash",
          "source_tx_type",
          "fee",
          "nonce",
          "oracle_id",
          "query",
          "query_fee",
          "query_ttl",
          "response_ttl",
          "sender_id",
          "ttl"
        ],
        "type": "object"
      },
      "OracleResponse": {
        "example": {
          "block_hash": "mh_211yFeU3yxKgqXAaRyyxrALMDPxxTyYkrs6TwN9hWnxMHQk8Nc",
          "block_time": 1595571314482,
          "height": 289005,
          "query_id": "oq_su6wv4MZsnJfopjAhd1Sx7HuBBtqhdHhahkoTPWk7bg24UWNR",
          "query": "YmFpeGluIHF1ZXJ5",
          "source_tx_hash": "th_gsaRRLnysE4pFH1DqY731F6LBEjhdDwnzoDyBnZjBUygoSvpJ",
          "source_tx_type": "OracleRespondTx",
          "fee": 17199000000000,
          "nonce": 57,
          "oracle_id": "ok_qJZPXvWPC7G9kFVEqNjj9NAmwMsQcpRu6E3SSCvCQuwfqpMtN",
          "query_fee": 2000000000000000,
          "response_ttl": {
            "type": "delta",
            "value": 100
          },
          "ttl": 289505
        },
        "properties": {
          "block_hash": {
            "description": "The hash of the block in which it ocurred",
            "type": "string"
          },
          "block_time": {
            "description": "The time of the block",
            "type": "integer"
          },
          "height": {
            "description": "The block height",
            "type": "integer"
          },
          "query_id": {
            "description": "The query ID",
            "type": "string"
          },
          "query": {
            "$ref": "#/components/schemas/OracleResponse"
          },
          "source_tx_hash": {
            "description": "The hash of the transaction in which the response was created",
            "type": "string"
          },
          "source_tx_type": {
            "description": "The type of the transaction in which the response was created, it can be either via a contract call or a respond transaction",
            "type": "string"
          },
          "fee": {
            "description": "The transaction fee",
            "type": "integer"
          },
          "nonce": {
            "description": "The nonce",
            "type": "integer"
          },
          "oracle_id": {
            "description": "The oracle ID of this response",
            "type": "string"
          },
          "response": {
            "description": "Base64 encoding of the response",
            "type": "string"
          },
          "response_ttl": {
            "description": "Expiration of the response",
            "type": "object"
          },
          "ttl": {
            "description": "Transaction TTL",
            "type": "integer"
          }
        },
        "required": [
          "block_hash",
          "block_time",
          "height",
          "query_id",
          "source_tx_hash",
          "source_tx_type",
          "fee",
          "nonce",
          "oracle_id",
          "response",
          "response_ttl",
          "ttl"
        ],
        "type": "object"
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "example": "ak_2KAcA2Pp1nrR8Wkt3FtCkReGzAi8vJ9Snxa4PcmrthVx8AhPe8"
          },
          "amount": {
            "type": "integer",
            "example": 9592000000000000000
          },
          "height": {
            "type": "integer",
            "example": 610158
          },
          "kind": {
            "type": "string",
            "enum": [
              "reward_dev",
              "reward_block"
            ]
          },
          "ref_txi": {
            "type": "integer",
            "nullable": true,
            "example": null
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "mdw_async_tasks": {
            "type": "object",
            "properties": {
              "long_tasks": {
                "type": "integer",
                "example": 1
              },
              "producer_buffer": {
                "type": "integer",
                "example": 2
              },
              "total_pending": {
                "type": "integer",
                "example": 3
              }
            },
            "required": [
              "long_tasks",
              "producer_buffer",
              "total_pending"
            ]
          },
          "mdw_gens_per_minute": {
            "description": "The approximate number of generations synced per minute on middleware",
            "type": "number",
            "example": 54.75
          },
          "mdw_height": {
            "description": "The top generation up to which the middleware was synced",
            "type": "integer",
            "example": 564291
          },
          "mdw_last_migration": {
            "description": "The last middleware migration ran",
            "type": "integer",
            "example": 20230519120000
          },
          "mdw_revision": {
            "description": "The middleware's git revision of the latest commit applied",
            "type": "string",
            "example": "2d3ae3d"
          },
          "mdw_synced": {
            "description": "true if middleware was synced up to the latest node block",
            "type": "boolean",
            "example": true
          },
          "mdw_syncing": {
            "description": "true if middleware is syncing (i.e. it didn't stop due to an error)",
            "type": "boolean",
            "example": true
          },
          "mdw_tx_index": {
            "description": "index of the latest synced transaction",
            "type": "integer",
            "example": 45208121
          },
          "mdw_version": {
            "description": "The middleware's version",
            "type": "string",
            "example": "1.49.0"
          },
          "node_height": {
            "description": "The node generation of the last block synced",
            "type": "integer",
            "example": 391040
          },
          "node_progress": {
            "description": "The percentage of generations synced on the node",
            "type": "number",
            "example": 98.67
          },
          "node_revision": {
            "description": "The node's git revision of the latest commit applied",
            "type": "string",
            "example": "a42c1b1e84dabdad350005213a2a9334113a6832"
          },
          "node_syncing": {
            "description": "If true, the node is still processing additional blocks to reach the latest one",
            "type": "boolean",
            "example": true
          },
          "node_version": {
            "description": "The node's version",
            "type": "string",
            "example": "6.8.1"
          }
        },
        "required": [
          "mdw_async_tasks",
          "mdw_gens_per_minute",
          "mdw_height",
          "mdw_last_migration",
          "mdw_revision",
          "mdw_synced",
          "mdw_syncing",
          "mdw_tx_index",
          "mdw_version",
          "node_height",
          "node_progress",
          "node_revision",
          "node_syncing",
          "node_version"
        ]
      },
      "Aex141Response": {
        "description": "Response Schema for AEX141 contract",
        "example": {
          "base_url": null,
          "contract_id": "ct_2oq4kSd4j1VkkbupueXLdHwYEJdY8Ntzvp1FFkMB1gYyXkYPcV",
          "contract_txi": 32746407,
          "extensions": [
            "mintable_templates",
            "mintable_templates_limit",
            "mutable_attributes",
            "burnable"
          ],
          "limits": {
            "limit_log_idx": 0,
            "limit_txi": 32746408,
            "template_limit": 100,
            "token_limit": null
          },
          "metadata_type": "map",
          "name": "Apes stepping into the Metaverse - (Template Version)",
          "nft_owners": 1,
          "nfts_amount": 36,
          "symbol": "ASITM-T"
        },
        "properties": {
          "base_url": {
            "description": "Metadata base url",
            "type": "string"
          },
          "contract_id": {
            "description": "NFT contract id",
            "type": "string"
          },
          "contract_txi": {
            "description": "Transaction that created the contract",
            "type": "string"
          },
          "extensions": {
            "description": "Extensions implemented by the contract",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limits": {
            "description": "Limit for amount of tokens or templates",
            "type": "object"
          }
        },
        "required": [
          "base_url",
          "contract_id",
          "contract_txi",
          "extensions",
          "limits",
          "metadata_type",
          "name",
          "nft_owners",
          "nfts_amount",
          "symbol"
        ],
        "title": "Aex141Response",
        "type": "object"
      },
      "Aex141OwnedTokenResponse": {
        "description": "Response Schema for owners of AEX-141 tokens",
        "example": {
          "contract_id": "ct_2oq4kSd4j1VkkbupueXLdHwYEJdY8Ntzvp1FFkMB1gYyXkYPcV",
          "owner_id": "ak_vTGaRAuGXPLhvNexrbzmHJ2MDv9JS2Ky7u2v469o6weaZ2Cgw",
          "token_id": 1
        },
        "properties": {
          "contract_id": {
            "description": "NFT contract id",
            "type": "string"
          },
          "account_id": {
            "description": "Account id",
            "type": "string"
          },
          "token_id": {
            "description": "Non-fungible token id",
            "type": "integer"
          }
        },
        "required": [
          "contract_id",
          "account_id",
          "token_id"
        ],
        "title": "Aex141OwnedTokenResponse",
        "type": "object"
      },
      "Aex141TemplatesResponse": {
        "description": "Response Schema for templates of a AEX-141 contract",
        "example": {
          "contract_id": "ct_2oq4kSd4j1VkkbupueXLdHwYEJdY8Ntzvp1FFkMB1gYyXkYPcV",
          "edition": {
            "limit": 2,
            "limit_log_idx": 0,
            "limit_tx_hash": "th_KTTTudTgSAZrHJQVwW4AF6XD1ksQbpyHXWfgmL2kSGvNk14CU",
            "supply": 1,
            "supply_log_idx": 0,
            "supply_tx_hash": "th_erpNZJTuvRfKPafcRvkJ7ddCu9GBSQoY12QVs5pdCTm6eCDwr"
          },
          "log_idx": 0,
          "template_id": 1,
          "tx_hash": "th_ojhH9bD7kGRpgZ6rXob2qi5asBKsYTdbSVaKzGdpfP6wiRxz4"
        },
        "properties": {
          "contract_id": {
            "description": "NFT contract id",
            "type": "string"
          },
          "edition": {
            "description": "Template edition details",
            "type": "object"
          },
          "log_idx": {
            "description": "Log index of the TemplateCreation",
            "type": "integer"
          },
          "template_id": {
            "description": "Template id of AEX-141 tokens",
            "type": "integer"
          },
          "tx_hash": {
            "description": "Transaction hash of the TemplateCreation",
            "type": "string"
          }
        },
        "required": [
          "contract_id",
          "log_idx",
          "template_id",
          "tx_hash"
        ],
        "title": "Aex141TemplatesResponse",
        "type": "object"
      },
      "Aex141TemplateTokensResponse": {
        "description": "Response Schema for template tokens of a AEX-141 contract",
        "example": {
          "log_idx": 0,
          "owner_id": "ak_8Ujt76QfpT1DyYsNZKGPGtMZ2C2MFf7CcnpQvJWNsX6szZkYN",
          "token_id": 29,
          "tx_hash": "th_ZzPmumNtkYCfrGpVGtQP6em9hgkWQqstddB5ynagrJJa7ua9c"
        },
        "properties": {
          "owner_id": {
            "description": "Owner wallet address",
            "type": "string"
          },
          "log_idx": {
            "description": "Mint event index",
            "type": "integer"
          },
          "token_id": {
            "description": "NFT id",
            "type": "integer"
          },
          "tx_hash": {
            "description": "Mint transaction hash",
            "type": "string"
          }
        },
        "required": [
          "log_idx",
          "owner_id",
          "token_id",
          "tx_hash"
        ],
        "title": "Aex141TemplatesResponse",
        "type": "object"
      },
      "Aex9Response": {
        "description": "Response Schema for AEX9 contract",
        "example": {
          "contract_id": "ct_2TZsPKT5wyahqFrzp8YX7DfXQapQ4Qk65yn3sHbifU9Db9hoav",
          "contract_txi": 12361891,
          "initial_supply": "1e+28",
          "event_supply": 0,
          "decimals": 18,
          "extensions": [
            "mintable",
            "burnable"
          ],
          "holders": 12,
          "name": "testnetAE",
          "symbol": "TTAE",
          "txi": 11145713
        },
        "properties": {
          "contract_id": {
            "description": "Id of the contract of the AEX9 tokens",
            "type": "string"
          },
          "contract_txi": {
            "description": "Index of transaction that created the contract",
            "type": "integer"
          },
          "initial_supply": {
            "description": "Token supply right after contract's creation",
            "type": "integer"
          },
          "event_supply": {
            "description": "Token supply updated on event basis (Mint, Burn, Swap)",
            "type": "integer"
          },
          "decimals": {
            "description": "The number of decimals for AEX9 token",
            "type": "integer"
          },
          "extensions": {
            "description": "Extensions implemnted by the contract",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "holders": {
            "description": "Count of accounts having balance (nil when contract is not complaint)",
            "type": "integer"
          },
          "name": {
            "description": "Name of AEX9 token",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol of AEX9 token",
            "type": "string"
          }
        },
        "required": [
          "contract_id",
          "contract_txi",
          "decimals",
          "symbol",
          "name",
          "holders",
          "initial_supply",
          "event_supply"
        ],
        "title": "Aex9Response",
        "type": "object"
      },
      "Aex9TransferResponse": {
        "description": "Response Schema for AEX9 transfer responses",
        "example": {
          "amount": 2,
          "block_height": 234208,
          "call_txi": 9564978,
          "contract_id": "ct_pqfbS94uUpE8reSwgtaAy5odGi7cPRMAxbjMyEzpTGqwTWyn5",
          "log_idx": 0,
          "micro_time": 1585667337719,
          "recipient": "ak_29GUBTrWTMb3tRUUgbVX1Bgwi2hyVhB8Q1befNsjLnP46Ub1V8",
          "sender": "ak_2CMNYSgoEjb1GSVJfWXjZ9NFWwnJ9jySBd6YY7uyr5DxvwctZU"
        },
        "properties": {
          "amount": {
            "description": "Transfer amount of AEX9 token",
            "type": "integer"
          },
          "block_height": {
            "description": "The block height",
            "type": "integer"
          },
          "call_txi": {
            "description": "AEX9 token transfer index",
            "type": "integer"
          },
          "contract_id": {
            "description": "Contract identifier",
            "type": "string"
          },
          "log_idx": {
            "description": "Log index",
            "type": "integer"
          },
          "micro_time": {
            "description": "The unix timestamp",
            "type": "integer"
          },
          "recipient": {
            "description": "Recipient of AEX9 transfer",
            "type": "string"
          },
          "sender": {
            "description": "Sender of AEX9 transfer",
            "type": "string"
          }
        },
        "required": [
          "contract_id",
          "micro_time",
          "block_height",
          "sender",
          "recipient",
          "log_idx",
          "call_txi",
          "amount"
        ],
        "title": "Response for AEX9 transfers",
        "type": "object"
      },
      "Aex9BalanceResponse": {
        "description": "Response Schema for AEX9 balance responses",
        "example": {
          "amount": 4.999999999990685e+25,
          "decimals": 18,
          "block_hash": "kh_2QevaXY7ULF5kTLsddwMzzZmBYWPgfaQbg2Y8maZDLKJaPhwDJ",
          "contract_id": "ct_RDRJC5EySx4TcLtGRWYrXfNgyWzEDzssThJYPd9kdLeS5ECaA",
          "height": 351666,
          "token_name": "BBA",
          "token_symbol": "BBA",
          "tx_hash": "th_27V4UmRhyeSuPEDieXVuAdE3v42dDnLzPY6uism1bFhHCPfWKv",
          "tx_index": 10848881,
          "tx_type": "contract_create_tx"
        },
        "properties": {
          "amount": {
            "description": "Amount of AEX9 token",
            "type": "integer"
          },
          "block_hash": {
            "description": "Block hash, indicating a state of a balance for that block",
            "type": "integer"
          },
          "contract_id": {
            "description": "Contract id of AEX9 token",
            "type": "string"
          },
          "decimals": {
            "description": "Number of decimals of AEX9 token",
            "type": "integer"
          },
          "height": {
            "description": "Block height, indicating a state of a balance for that block height",
            "type": "integer"
          },
          "token_name": {
            "description": "Name of AEX9 token",
            "type": "string"
          },
          "token_symbol": {
            "description": "Symbol of AEX9 token",
            "type": "string"
          },
          "tx_hash": {
            "description": "Transaction hash, indicating a state of a balance for that block height",
            "type": "string"
          },
          "tx_index": {
            "description": "Transaction index, indicating a state of a balance for that block height",
            "type": "integer"
          },
          "tx_type": {
            "description": "Transaction type, indicating a state of a balance for that block height",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "block_hash",
          "contract_id",
          "decimals",
          "height",
          "token_name",
          "token_symbol",
          "tx_hash",
          "tx_index",
          "tx_type"
        ],
        "title": "Response for AEX-9 account balance",
        "type": "object"
      },
      "Aex9ContractBalanceResponse": {
        "description": "Response Schema for AEX9 contract balances responses",
        "example": {
          "account_id": "ak_2MHJv6JcdcfpNvu4wRDZXWzq8QSxGbhUfhMLR7vUPzRFYsDFw6",
          "amount": 4050000000000,
          "contract_id": "ct_RDRJC5EySx4TcLtGRWYrXfNgyWzEDzssThJYPd9kdLeS5ECaA",
          "block_hash": "kh_bkyFuxj3W9yY8Tmuiq3KSCVHaTP3vMzHt4pZ6y1QcQEzyAf5i",
          "height": 618127,
          "last_tx_hash": "th_KTTTudTgSAZrHJQVwW4AF6XD1ksQbpyHXWfgmL2kSGvNk14CU,",
          "last_log_idx": 1
        },
        "properties": {
          "account_id": {
            "description": "The wallet pubkey",
            "type": "string"
          },
          "amount": {
            "description": "The balance amount",
            "type": "integer"
          },
          "block_hash": {
            "description": "The block hash, indicating a state of a balance for that block",
            "type": "integer"
          },
          "contract_id": {
            "description": "The contract id of given token",
            "type": "integer"
          },
          "height": {
            "description": "The block height, indicating a state of a balance for that block height",
            "type": "integer"
          },
          "last_tx_hash": {
            "description": "The hash of the last transaction that changed the balance",
            "type": "string"
          },
          "last_log_idx": {
            "description": "The index of the event log that changed the balance",
            "type": "integer"
          }
        },
        "required": [
          "account_id",
          "amount",
          "block_hash",
          "contract_id",
          "height",
          "last_tx_hash",
          "last_log_idx"
        ],
        "title": "Response for AEX-9 contract balances",
        "type": "object"
      }
    }
  },
  "paths": {
    "/accounts/{id}/activities": {
      "get": {
        "deprecated": false,
        "description": "Get an account activities.",
        "operationId": "get_account_activities",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The account address",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ak_M6MNwGLtMQ4j3m8pzQz9uF38nMfjCCVaiQ8fvTAU6DEsCocD5"
            }
          },
          {
            "name": "owned_only",
            "in": "query",
            "description": "Indicate to filter only activities initiated by the account",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "type",
            "description": "Activity type:\n * `transactions` - Transactions containing the account in any of the transaction fields\n * `aexn` - AExN (aex9 and aex141) activities\n * `aex9` - AEx9 activities\n * `aex141` - AEx141 activities\n * `contract` - Internal and external contract calls\n * `transfers` - Internal (both gen-based and tx-based) transfers\n * `claims` - Name claims related to the name hash\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "transactions",
                "aexn",
                "aex9",
                "aex141",
                "contract",
                "transfers",
                "claims"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginatinated activities",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Activity"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/blocks": {
      "get": {
        "deprecated": true,
        "description": "Get multiple blocks.",
        "operationId": "get_blocks",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated blocks",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Block"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{hash_or_kbi}": {
      "get": {
        "deprecated": true,
        "description": "Get a single block.",
        "operationId": "get_block",
        "parameters": [
          {
            "name": "hash_or_kbi",
            "in": "path",
            "description": "The block encoded hash or key block index",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "example": "kh_22BuVBCFvW5FvQu3F8h4v351SfJPokR9ytwAD77Lyuo6mqxeeF"
                },
                {
                  "type": "integer",
                  "example": 123
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/blocks/{kbi}/{mbi}": {
      "get": {
        "deprecated": true,
        "description": "Get a single block.",
        "operationId": "get_block_by_mbi",
        "parameters": [
          {
            "name": "kbi",
            "in": "path",
            "description": "The block key block index",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 123
            }
          },
          {
            "name": "mbi",
            "in": "path",
            "description": "The block micro block index, starting from 0",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 456
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/key-blocks": {
      "get": {
        "deprecated": false,
        "description": "Get multiple key blocks.",
        "operationId": "get_key_blocks",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated key blocks",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KeyBlock"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/key-blocks/{hash_or_kbi}": {
      "get": {
        "deprecated": false,
        "description": "Get a single key block.",
        "operationId": "get_key_block",
        "parameters": [
          {
            "name": "hash_or_kbi",
            "in": "path",
            "description": "The key block encoded hash or key block index",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "example": "kh_22BuVBCFvW5FvQu3F8h4v351SfJPokR9ytwAD77Lyuo6mqxeeF"
                },
                {
                  "type": "integer",
                  "example": 123
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single key block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyBlock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/key-blocks/{hash_or_kbi}/micro-blocks": {
      "get": {
        "deprecated": false,
        "description": "Get the key block micro blocks.",
        "operationId": "get_key_block_micro_blocks",
        "parameters": [
          {
            "name": "hash_or_kbi",
            "in": "path",
            "description": "The key block encoded hash or key block index",
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "example": "kh_22BuVBCFvW5FvQu3F8h4v351SfJPokR9ytwAD77Lyuo6mqxeeF"
                },
                {
                  "type": "integer",
                  "example": 123
                }
              ]
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated micro blocks",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MicroBlock"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/micro-blocks/{hash}": {
      "get": {
        "deprecated": false,
        "description": "Get a micro block",
        "operationId": "get_micro_block",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "The micro block encoded hash",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mh_22BuVBCFvW5FvQu3F8h4v351SfJPokR9ytwAD77Lyuo6mqxeeF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a single micro block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MicroBlock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/micro-blocks/{hash}/txs": {
      "get": {
        "deprecated": false,
        "description": "Get a micro block transactions",
        "operationId": "get_micro_block_transactions",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "The micro block encoded hash",
            "required": true,
            "schema": {
              "type": "string",
              "example": "mh_22BuVBCFvW5FvQu3F8h4v351SfJPokR9ytwAD77Lyuo6mqxeeF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated micro blocks",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Tx"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names": {
      "get": {
        "deprecated": false,
        "description": "Get multiple names.",
        "operationId": "get_names",
        "parameters": [
          {
            "name": "by",
            "in": "query",
            "description": "Sorting by deactivation, activation or name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "activation"
            }
          },
          {
            "name": "owned_by",
            "in": "query",
            "description": "Account that owns the name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ak_25BWMx4An9mmQJNPSwJisiENek3bAGadze31Eetj4K4JJC8VQN"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Activation state of the name (active or inactive)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "inactive"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated names",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Name"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/search": {
      "get": {
        "deprecated": false,
        "description": "Get multiple names.",
        "operationId": "search_names",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated active/inactive names and auctions",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Name"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "auction",
                                      "active",
                                      "inactive"
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/auctions": {
      "get": {
        "deprecated": false,
        "description": "Get multiple names.",
        "operationId": "get_names_auctions",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated active/inactive names and auctions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a single name.",
        "operationId": "get_name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns single name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Name"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}/auction": {
      "get": {
        "deprecated": false,
        "description": "Get name auction",
        "operationId": "get_name_auction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the name active auction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}/pointers": {
      "get": {
        "deprecated": false,
        "description": "Get name pointers",
        "operationId": "get_name_pointers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a mapping of the name pointers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}/pointees": {
      "get": {
        "deprecated": false,
        "description": "Get name pointees",
        "operationId": "get_name_pointees",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the name the active and inactive name pointees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "object"
                    },
                    "inactive": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}/claims": {
      "get": {
        "deprecated": false,
        "description": "Get name claims",
        "operationId": "get_name_claims",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name or name hash",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The name claims",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameClaim"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}/transfers": {
      "get": {
        "deprecated": false,
        "description": "Get name transfers",
        "operationId": "get_name_transfers",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name or name hash",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The name transfers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameTransfer"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/names/{id}/updates": {
      "get": {
        "deprecated": false,
        "description": "Get name updates",
        "operationId": "get_name_updates",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name or name hash",
            "required": true,
            "schema": {
              "type": "string",
              "example": "foo.chain"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The name updates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameUpdate"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/txs": {
      "get": {
        "deprecated": false,
        "description": "Get multiple transactions.",
        "operationId": "get_txs",
        "parameters": [
          {
            "name": "type",
            "description": "The transaction type. The query allows providing of multiple type parameters. [More info](https://github.com/aeternity/ae_mdw#types)",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "channel_close_mutual",
                  "channel_close_solo",
                  "channel_create",
                  "channel_deposit",
                  "channel_force_progress",
                  "channel_offchain",
                  "channel_settle",
                  "channel_slash",
                  "channel_snapshot_solo",
                  "channel_withdraw",
                  "contract_call",
                  "contract_create",
                  "ga_attach",
                  "ga_meta",
                  "name_claim",
                  "name_preclaim",
                  "name_revoke",
                  "name_transfer",
                  "name_update",
                  "oracle_extend",
                  "oracle_query",
                  "oracle_register",
                  "oracle_response",
                  "paying_for",
                  "spend"
                ]
              }
            },
            "required": false,
            "x-example": "channel_create"
          },
          {
            "name": "type_group",
            "description": "The type group. The query allows providing of multiple type group parameters. [More info](https://github.com/aeternity/ae_mdw#types)",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "channel",
                  "contract",
                  "ga",
                  "name",
                  "oracle",
                  "paying_for",
                  "spend"
                ],
                "type": "string"
              }
            },
            "required": false,
            "x-example": "channel"
          },
          {
            "name": "account",
            "description": "The account ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-example": "ak_g5vQK6beY3vsTJHH7KBusesyzq9WMdEYorF8VyvZURXTjLnxT"
          },
          {
            "name": "contract",
            "description": "The contract ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-example": "ct_2AfnEfCSZCTEkxL5Yoi4Yfq6fF7YapHRaFKDJK3THMXMBspp5z"
          },
          {
            "name": "channel",
            "description": "The channel ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-example": "ch_22usvXSjYaDPdhecyhub7tZnYpHeCEZdscEEyhb2M4rHb58RyD"
          },
          {
            "name": "oracle",
            "description": "The oracle ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-example": "ok_24jcHLTZQfsou7NvomRJ1hKEnjyNqbYSq2Az7DmyrAyUHPq8uR"
          },
          {
            "name": "sender_id",
            "description": "The sender ID",
            "example": "ak_26dopN3U2zgfJG4Ao4J4ZvLTf5mqr7WAgLAq6WxjxuSapZhQg5",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient_id",
            "description": "The recipient ID",
            "example": "ak_r7wvMxmhnJ3cMp75D8DUnxNiAvXs8qcdfbJ1gUWfH8Ufrx2A2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entrypoint",
            "description": "Entrypoint of a contract call",
            "example": "put_listing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginatinated transactions",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Tx"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/txs/{hash_or_index}": {
      "get": {
        "deprecated": false,
        "description": "Get a single transaction.",
        "operationId": "get_tx",
        "parameters": [
          {
            "name": "hash_or_index",
            "in": "path",
            "description": "The transaction encoded hash or index (txi)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "th_2Twp3pJeVuwQ7cMSdPQRfpAUWwdMiwx6coVMpRaNSuzFRnDZFk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns single transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tx"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/txs/count": {
      "get": {
        "deprecated": false,
        "description": "Get count of transactions at the latest height.",
        "operationId": "get_tx_count",
        "parameters": [
          {
            "name": "tx_type",
            "description": "Type of a transaction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-example": "contract_call"
            }
          },
          {
            "name": "id",
            "description": "The ID of the address/name/oracle/etc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-example": "ak_g5vQK6beY3vsTJHH7KBusesyzq9WMdEYorF8VyvZURXTjLnxT"
            }
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns count of all transactions at the latest height",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The transactions count",
                  "example": 15479090,
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/txs/count/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get transactions count and its type for given aeternity ID.",
        "operationId": "get_tx_count_by_id",
        "parameters": [
          {
            "description": "The ID of the address/name/oracle/etc",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_g5vQK6beY3vsTJHH7KBusesyzq9WMdEYorF8VyvZURXTjLnxT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response schema for transactions count by id",
            "content": {
              "application/json": {
                "example": {
                  "oracle_extend_tx": {
                    "oracle_id": 2
                  },
                  "oracle_query_tx": {
                    "oracle_id": 2,
                    "sender_id": 2
                  },
                  "oracle_register_tx": {
                    "account_id": 1
                  },
                  "oracle_response_tx": {
                    "oracle_id": 2
                  },
                  "spend_tx": {
                    "recipient_id": 1,
                    "sender_id": 2
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "channel_close_mutual_tx": {
                      "type": "object",
                      "description": "The channel close mutual txs count"
                    },
                    "channel_close_solo_tx": {
                      "type": "object",
                      "description": "The channel close solo txs count"
                    },
                    "channel_create_tx": {
                      "type": "object",
                      "description": "The channel create txs count"
                    },
                    "channel_deposit_tx": {
                      "type": "object",
                      "description": "The channel deposit txs count"
                    },
                    "channel_force_progress_tx": {
                      "type": "integer",
                      "description": "The channel force progress txs count"
                    },
                    "channel_offchain_tx": {
                      "type": "object",
                      "description": "The channel offchain txs count"
                    },
                    "channel_settle_tx": {
                      "type": "object",
                      "description": "The channel settle txs count"
                    },
                    "channel_slash_tx": {
                      "type": "object",
                      "description": "The channel slash txs count"
                    },
                    "channel_snapshot_solo_tx": {
                      "type": "object",
                      "description": "The channel snapshot solo txs count"
                    },
                    "channel_withdraw_tx": {
                      "type": "object",
                      "description": "The channel withdraw txs count"
                    },
                    "contract_call_tx": {
                      "type": "object",
                      "description": "The contract call txs count"
                    },
                    "contract_create_tx": {
                      "type": "object",
                      "description": "The contract create txs count"
                    },
                    "ga_attach_tx": {
                      "type": "object",
                      "description": "The ga attach txs count"
                    },
                    "ga_meta_tx": {
                      "type": "object",
                      "description": "The ga meta txs count"
                    },
                    "name_claim_tx": {
                      "type": "object",
                      "description": "The name claim txs count"
                    },
                    "name_preclaim_tx": {
                      "type": "object",
                      "description": "The name preclaim txs count"
                    },
                    "name_revoke_tx": {
                      "type": "object",
                      "description": "The name revoke txs count"
                    },
                    "name_transfer_tx": {
                      "type": "integer",
                      "description": "The name transfer txs count"
                    },
                    "name_update_tx": {
                      "type": "object",
                      "description": "The name update txs count"
                    },
                    "oracle_extend_tx": {
                      "type": "object",
                      "description": "The oracle extend txs count"
                    },
                    "oracle_query_tx": {
                      "type": "object",
                      "description": "The oracle query txs count"
                    },
                    "oracle_register_tx": {
                      "type": "object",
                      "description": "The oracle register txs count"
                    },
                    "oracle_response_tx": {
                      "type": "object",
                      "description": "The oracle response txs count"
                    },
                    "paying_for_tx": {
                      "type": "object",
                      "description": "The paying for txs count"
                    },
                    "spend_tx": {
                      "type": "object",
                      "description": "The spend txs count"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/deltastats": {
      "get": {
        "deprecated": false,
        "description": "Get delta stats.",
        "operationId": "get_deltastats",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated delta stats per generation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DeltaStat"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/totalstats": {
      "get": {
        "deprecated": false,
        "description": "Get total accumulated stats.",
        "operationId": "get_totalstats",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated total stats per generation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TotalStat"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/channels": {
      "get": {
        "deprecated": false,
        "description": "Get multiple channels.",
        "operationId": "get_channels",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Exclusively filter by active/inactive channels.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "inactive"
              ],
              "example": "inactive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated channels",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Channel"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/channels/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a single channel.",
        "operationId": "get_channel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The channel",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ch_2K9cFjoxWxCku6D8ugXonhj7ZqpPsGFPcbVPx25b2HFaLSoLie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns single channel",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Channel"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}": {
      "get": {
        "deprecated": false,
        "description": "Gets contract creation info.",
        "operationId": "get_contract.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contract that emitted the logs",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ct_M6MNwGLtMQ4j3m8pzQz9uF38nMfjCCVaiQ8fvTAU6DEsCocD5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns single contract",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/logs": {
      "get": {
        "deprecated": false,
        "description": "Get contract logs.",
        "operationId": "get_contracts_logs",
        "parameters": [
          {
            "name": "contract_id",
            "in": "query",
            "description": "Contract that emitted the logs",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ct_M6MNwGLtMQ4j3m8pzQz9uF38nMfjCCVaiQ8fvTAU6DEsCocD5"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Name of the event",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Transfer"
            }
          },
          {
            "name": "function",
            "in": "query",
            "description": "Prefix of the contract called function",
            "required": false,
            "schema": {
              "type": "string",
              "example": "mint"
            }
          },
          {
            "name": "function_prefix",
            "in": "query",
            "description": "Prefix of the contract called function",
            "required": false,
            "schema": {
              "type": "string",
              "example": "put"
            }
          },
          {
            "name": "data",
            "in": "query",
            "description": "Data prefix from the contract call",
            "required": false,
            "schema": {
              "type": "string",
              "example": "AB"
            }
          },
          {
            "name": "aexn-args",
            "in": "query",
            "description": "Indicates to format args when event is AEX-N",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated contracts logs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ContractLog"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/calls": {
      "get": {
        "deprecated": false,
        "description": "Get contract calls.",
        "operationId": "get_contracts_calls",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated contracts logs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ContractCall"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/oracles": {
      "get": {
        "deprecated": false,
        "description": "Get multiple oracles.",
        "operationId": "get_oracles",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "oracle state (active or inactive)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active"
            }
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated oracles",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Oracle"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/oracles/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a single oracle.",
        "operationId": "get_oracle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The oracle",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ok_qJZPXvWPC7G9kFVEqNjj9NAmwMsQcpRu6E3SSCvCQuwfqpMtN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns single oracle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oracle"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/oracles/{id}/queries": {
      "get": {
        "deprecated": false,
        "description": "Get an oracle's queries.",
        "operationId": "get_oracle_queries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The oracle",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ok_qJZPXvWPC7G9kFVEqNjj9NAmwMsQcpRu6E3SSCvCQuwfqpMtN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated oracle queries",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OracleQuery"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/oracles/{id}/responses": {
      "get": {
        "deprecated": false,
        "description": "Get an oracle's responses.",
        "operationId": "get_oracle_responses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The oracle",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ok_qJZPXvWPC7G9kFVEqNjj9NAmwMsQcpRu6E3SSCvCQuwfqpMtN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated oracle responses",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OracleResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transfers": {
      "get": {
        "deprecated": false,
        "description": "Get multiple transfers.",
        "operationId": "get_transfers",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated names",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Transfer"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "description": "Gets the current syncing status of both middleware and the node",
        "operationId": "getStatus",
        "responses": {
          "200": {
            "description": "Returns a map of status items",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/aex141/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get AEX141 contract meta-info, extensions, limits and stats.",
        "operationId": "get_aex141_by_contract",
        "parameters": [
          {
            "description": "The contract id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ct_22NTeTHfqVXLChCMCy3eAAj3hGW2nuNUwHhQ1zRX3k4iZKq8Ru"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns AEX-141 information by contract id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aex141Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex141": {
      "get": {
        "deprecated": false,
        "description": "Get AEX141 contracts sorted by creation time, name or symbol.",
        "operationId": "get_sorted_aex141_contracts",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "meta info field used on sorting",
            "in": "query",
            "name": "by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "creation",
                "name",
                "symbol"
              ]
            }
          },
          {
            "description": "Sorts by name or symbol prefix",
            "in": "query",
            "name": "prefix",
            "required": false,
            "schema": {
              "type": "string",
              "example": "mycolle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-141 contracts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex141Response"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex141/{contractId}/owner/{tokenId}": {
      "get": {
        "deprecated": false,
        "description": "Get owner of a NFT (AEX-141 token).",
        "operationId": "get_aex141_token_owner",
        "parameters": [
          {
            "description": "The contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ct_22NTeTHfqVXLChCMCy3eAAj3hGW2nuNUwHhQ1zRX3k4iZKq8Ru"
            }
          },
          {
            "description": "The nft token id",
            "in": "path",
            "name": "tokenId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owner account of the NFT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The owner account ID."
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex141/{contractId}/owners": {
      "get": {
        "deprecated": false,
        "description": "Get owners of tokens of a AEX-141 contract.",
        "operationId": "get_aex141_contract_owners",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "The contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ct_22NTeTHfqVXLChCMCy3eAAj3hGW2nuNUwHhQ1zRX3k4iZKq8Ru"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-141 contracts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex141OwnedTokenResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex141/{contractId}/templates": {
      "get": {
        "deprecated": false,
        "description": "Get templates AEX-141 contract tokens.",
        "operationId": "get_aex141_contract_templates",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "The contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ct_22NTeTHfqVXLChCMCy3eAAj3hGW2nuNUwHhQ1zRX3k4iZKq8Ru"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-141 templates",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex141TemplatesResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex141/{contractId}/templates/{templateId}/tokens": {
      "get": {
        "deprecated": false,
        "description": "Get AEX-141 template tokens.",
        "operationId": "get_aex141_template_tokens",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "Contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ct_ouWFCU2Qg6v7dgFpjRc3jAfcaRhb9iByPRBDjXSJoA8fRrQ4j"
            }
          },
          {
            "description": "Template id",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 8
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-141 template tokens",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex141TemplateTokensResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex141/owned-nfts/{accountId}": {
      "get": {
        "deprecated": false,
        "description": "Get tokens owned by an account.",
        "operationId": "get_aex141_owned_tokens",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "The account id",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_vTGaRAuGXPLhvNexrbzmHJ2MDv9JS2Ky7u2v469o6weaZ2Cgw"
            }
          },
          {
            "description": "Collection contract pubkey",
            "in": "query",
            "name": "contract",
            "required": false,
            "schema": {
              "type": "string",
              "x-example": "ct_2oq4kSd4j1VkkbupueXLdHwYEJdY8Ntzvp1FFkMB1gYyXkYPcV"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-141 tokens",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex141OwnedTokenResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 creation and meta_info information by contract id.",
        "operationId": "get_aex9_by_contract",
        "parameters": [
          {
            "description": "The contract id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ct_okiZvxvjrQvBuYcbB1EHkLi3bCtKthFHQVPk3GmKvei7fVrHo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns AEX-9 information by contract id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aex9Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 tokens sorted by creation time, name or symbol.",
        "operationId": "get_sorted_aex9_tokens",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "meta info field used on sorting",
            "in": "query",
            "name": "by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "creation",
                "name",
                "symbol"
              ]
            }
          },
          {
            "description": "Sorts by name or symbol",
            "in": "query",
            "name": "prefix",
            "required": false,
            "schema": {
              "type": "string",
              "x-example": "AA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-9 tokens",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex9Response"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/count": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 tokens count.",
        "operationId": "get_aex9_tokens_count",
        "responses": {
          "200": {
            "description": "Returns the number of AEX9 contracts created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Amount of contracts"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/{contractId}/logs-count": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 token events count.",
        "operationId": "get_aex9_logs_count",
        "parameters": [
          {
            "description": "Contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ct_uGk1rkSdccPKXLzS259vdrJGTWAY9sfgVYspv6QYomxvWZWBM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the number of events emmited so far",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Amount of log events"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/{contractId}/balances": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 balances on a contract.",
        "operationId": "get_aex9_contract_balances",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "Contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ct_uGk1rkSdccPKXLzS259vdrJGTWAY9sfgVYspv6QYomxvWZWBM"
            }
          },
          {
            "description": "Order by",
            "in": "query",
            "name": "by",
            "required": false,
            "schema": {
              "type": "string",
              "x-example": "amount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated contract balances",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex9ContractBalanceResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/{contractId}/balances/{accountId}": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 balance for an account on a contract.",
        "operationId": "get_aex9_contract_account_balance",
        "parameters": [
          {
            "description": "Contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ct_uGk1rkSdccPKXLzS259vdrJGTWAY9sfgVYspv6QYomxvWZWBM"
            }
          },
          {
            "description": "Account id",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_152krtQsp2T3ApcFv7B21FFXkjXnsps3VBfhJeyNF1tHh6mB2"
            }
          },
          {
            "description": "Block hash",
            "in": "query",
            "name": "hash",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "mh_2EPBrw8PUhZMgVPVMopcG8GYsNS7e9itic8kcWxKBZPkDxVYds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a the balance of an account on a contract",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "account": {
                          "description": "The account present on a AEX9",
                          "type": "string"
                        },
                        "amount": {
                          "description": "The amount of AEX9 token",
                          "type": "integer"
                        },
                        "contract": {
                          "description": "The contract id of given token",
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/account-balances/{account_id}": {
      "get": {
        "deprecated": false,
        "description": "Get all AEX9 balances for an account on the last block.",
        "operationId": "get_aex9_account_balances",
        "parameters": [
          {
            "description": "Account id",
            "in": "path",
            "name": "account_id",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_152krtQsp2T3ApcFv7B21FFXkjXnsps3VBfhJeyNF1tHh6mB2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all the balances of an account",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex9BalanceResponse"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/transfers/from/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 transfers filtered by sender.",
        "operationId": "get_aex9_sender_transfers",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "Sender account id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_1ADSaLCnFnWpbq6t8wJhUJn6ombZwgewPxe7MCaJTfGLKDkbw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-9 transfers of a sender",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex9TransferResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/transfers/to/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 transfers filtered by recipient.",
        "operationId": "get_aex9_recipient_transfers",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "Recipient account id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_2meHkLcAoZPrQj7P5WjFyJJRLJqRtv43z1QEbpcS1gHs9W8Q3g"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-9 transfers of a recipient",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex9TransferResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/transfers/from-to/{sender}/{recipient}": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 transfers filtered by sender and recipient.",
        "operationId": "get_aex9_pair_transfers",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "Sender account id",
            "in": "path",
            "name": "sender",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_17qFR9Zp6CbX9ZZrEYd5155KHGAsfbY1YZ2UsRpjH6WJc8Pk1"
            }
          },
          {
            "description": "Recipient account id",
            "in": "path",
            "name": "recipient",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_psy8tRXPzGxh6975H7K6XQcMFVsdrxJMt7YkzMY8oUTevutzw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns paginated AEX-9 transfers between two accounts",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Aex9TransferResponse"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/aex9/{contractId}/balances/{accountId}/history": {
      "get": {
        "deprecated": false,
        "description": "Get AEX9 account balance on a contract throughout all heights when changed.",
        "operationId": "get_aex9_contract_account_balance_history",
        "parameters": [
          {
            "$ref": "#/components/parameters/LimitParam"
          },
          {
            "$ref": "#/components/parameters/ScopeParam"
          },
          {
            "$ref": "#/components/parameters/DirectionParam"
          },
          {
            "description": "Contract id",
            "in": "path",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ct_uGk1rkSdccPKXLzS259vdrJGTWAY9sfgVYspv6QYomxvWZWBM"
            }
          },
          {
            "description": "Account id",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string",
              "x-example": "ak_152krtQsp2T3ApcFv7B21FFXkjXnsps3VBfhJeyNF1tHh6mB2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account balance history on a token contract",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "account": {
                          "description": "The account present on a AEX9",
                          "type": "string"
                        },
                        "amount": {
                          "description": "The amount of AEX9 token",
                          "type": "integer"
                        },
                        "contract": {
                          "description": "The contract id of given token",
                          "type": "string"
                        },
                        "height": {
                          "description": "The block height, indicating a state of a balance for that block height",
                          "type": "integer"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
